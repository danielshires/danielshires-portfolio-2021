@import url(https://cdn.jsdelivr.net/npm/css.gg/icons/all.css);@font-face{font-family:PX-Grotesk;src:url(/fonts/Px-Grotesk/Px-Grotesk-Regular.woff2) format("woff2"),url(/fonts/Px-Grotesk/Px-Grotesk-Regular.woff) format("woff"),url(/fonts/Px-Grotesk/Px-Grotesk-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:PX-Grotesk;src:url(/fonts/Px-Grotesk/Px-Grotesk-Bold.woff2) format("woff2"),url(/fonts/Px-Grotesk/Px-Grotesk-Bold.woff) format("woff"),url(/fonts/Px-Grotesk/Px-Grotesk-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Circular;src:url(/fonts/Circular/CircularStd-Book.woff);src:url(/fonts/Circular/CircularStd-Book.eot?#iefix) format("embedded-opentype"),url(/fonts/Circular/CircularStd-Book.woff2) format("woff2"),url(/fonts/Circular/CircularStd-Book.woff) format("woff"),url(/fonts/Circular/CircularStd-Book.ttf) format("truetype"),url(/fonts/Circular/CircularStd-Book.svg#svgFontName) format("svg");font-weight:400;font-style:normal}@font-face{font-family:Circular;src:url(/fonts/Circular/CircularStd-Bold.woff);src:url(/fonts/Circular/CircularStd-Bold.eot?#iefix) format("embedded-opentype"),url(/fonts/Circular/CircularStd-Bold.woff2) format("woff2"),url(/fonts/Circular/CircularStd-Bold.woff) format("woff"),url(/fonts/Circular/CircularStd-Bold.ttf) format("truetype"),url(/fonts/Circular/CircularStd-Bold.svg#svgFontName) format("svg");font-weight:700;font-style:normal}@font-face{font-family:Circular;src:url(/fonts/Circular/CircularStd-Medium.woff);src:url(/fonts/Circular/CircularStd-Medium.eot?#iefix) format("embedded-opentype"),url(/fonts/Circular/CircularStd-Medium.woff2) format("woff2"),url(/fonts/Circular/CircularStd-Medium.woff) format("woff"),url(/fonts/Circular/CircularStd-Medium.ttf) format("truetype"),url(/fonts/Circular/CircularStd-Medium.svg#svgFontName) format("svg");font-weight:500;font-style:normal}:root{--title-font:"Circular";--body-font:"Circular"}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--primary-text-color:#0F1317;--primary-text-color-light:#567492;--text-white:#ffffff;--primary-gradient:linear-gradient(90deg, #ff00e0, #ff00c4, #ff00a9, #ff008d, #ff0073, #ff005a, #ff0042, #ff0029);--primary-pink:#FF00E0;--primar-red:#FF0029;--testimonial-img-size-mobile:150px;--testimonial-img-size-md:200px;--testimonial-img-size-lg:240px;--timing:150ms;--bezier:cubic-bezier(0.12, 0, 0.39, 0);--ggs:1.25}.container{padding-left:1rem;padding-right:1rem}@media (min-width:992px){.container{padding-left:0;padding-right:0}}html{scroll-behavior:smooth;height:-webkit-fill-available;font-size:16px;overflow-y:scroll;overflow-x:hidden}@media (min-width:768px){html{font-size:110%}}@media (min-width:768px){html{font-size:120%}}@media (min-width:992px){html{font-size:130%}}@media (min-width:1200px){html{font-size:140%}}@media (min-width:1400px){html{font-size:150%}}body{font-family:var(--body-font);font-weight:400;color:var(--primary-text-color);text-align:center;width:100%;word-wrap:break-word;overflow:hidden;text-rendering:optimizeLegibility}h1{font-size:2.5em;font-weight:900;line-height:110%}h2{font-size:1.75em;font-weight:900;margin-top:2rem;line-height:110%}h3{font-size:1.5em;font-weight:500;margin-top:1.5rem;line-height:130%}h4{font-size:1.25em;font-weight:500;margin-top:1.25rem;line-height:130%}h5{font-size:1em;font-weight:500;margin-top:1rem;line-height:140%}h6{font-family:PX-Grotesk,Arial,Helvetica,sans-serif;text-transform:uppercase;letter-spacing:1px;font-size:.75em;font-weight:600;margin-top:.75rem;margin-bottom:.25rem;background:var(--primary-gradient);background-color:transparent;background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;line-height:140%}p{font-size:1em;margin-top:1rem;font-weight:400;line-height:150%}b,strong{font-weight:500}ol,ul{list-style-type:disc;margin-left:1rem}li{margin:1.5rem 0}li::marker{color:var(--primary-pink);font-size:1.25em}p.footer-text{font-size:14px}label{margin-bottom:.5rem;text-transform:uppercase;font-size:.6em;font-weight:500;letter-spacing:.5px}input,select{min-height:3rem}.form-group-row{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}@media (min-width:768px){.form-group-row{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}}.form-group{margin-bottom:1.5rem;width:100%}@media (min-width:768px){.form-group{width:50%}}img{width:100%}hr{margin:2.5rem 0 2.5rem 0}@media (min-width:768px){hr{margin:3rem 0 3rem 0}}@media (min-width:1200px){hr{margin:4rem 0 4rem 0}}a{font-size:1em;display:inline-block;position:relative;color:inherit;text-decoration:none;border-bottom:0 solid transparent}a:hover{color:inherit;text-decoration:none}footer a:hover,header a.nav-link.section-link:hover,header a.navbar-brand:hover{text-decoration:none;border-bottom:0 solid transparent;-webkit-transition:all calc(var(--timing)/ .5) var(--bezier);transition:all calc(var(--timing)/ .5) var(--bezier)}footer a::after,header a.nav-link.section-link::after,header a.navbar-brand::after{content:'';position:absolute;width:100%;-webkit-transform:scaleX(0);transform:scaleX(0);height:2px;bottom:-.5em;left:0;background:var(--primary-gradient);background-color:var(--primary-gradient);-webkit-transform-origin:bottom right;transform-origin:bottom right;-webkit-transition:-webkit-transform calc(var(--timing) * 1) var(--bezier);transition:-webkit-transform calc(var(--timing) * 1) var(--bezier);transition:transform calc(var(--timing) * 1) var(--bezier);transition:transform calc(var(--timing) * 1) var(--bezier),-webkit-transform calc(var(--timing) * 1) var(--bezier)}footer a::after{bottom:0}footer a:hover::after,header a.nav-link.section-link:hover::after,header a.navbar-brand:hover::after{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:bottom left;transform-origin:bottom left}p a{text-align:center}#animation{position:relative;width:25px;height:25px;text-align:center;opacity:1;-webkit-transform:translateY(-3%);transform:translateY(-3%)}#bg-circle{position:absolute;width:100%;height:100%;text-align:center;opacity:1;display:none}header{top:0;left:0;width:100%;height:72px;z-index:100;-webkit-transition:all .3s ease-out;transition:all .3s ease-out;font-size:.75rem;text-align:center}header li,header ul{list-style-type:none;margin:0}header .btn{font-size:.8em;padding:.5rem .75rem;min-width:2rem}header .navbar{background-color:var(--text-white);color:var(--primary-text-color);-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;grid-gap:30px;gap:30px}@media(min-width:768px){header .navbar{height:auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;grid-gap:0;gap:0}}header .navbar-brand{font-size:1.4em;color:var(--primary-text-color);background:var(--text-white);-webkit-background-clip:text;background-clip:text;-webkit-transform:translateY(0);transform:translateY(0);font-weight:600;margin-right:auto}@media(min-width:768px){header .navbar-brand{font-size:1.125em}}header .nav-link{font-size:1em;color:var(--primary-text-color);background:var(--text-white);-webkit-background-clip:text;background-clip:text}header .social-img{width:1.5em;height:100%}header .github img{width:1.6em;height:100%}header .social-link{-webkit-transition:all calc(var(--timing)/ 2) var(--bezier);transition:all calc(var(--timing)/ 2) var(--bezier)}header .social-link:hover{-webkit-transform:translateY(-.25em);transform:translateY(-.25em);-webkit-transition:all calc(var(--timing)/ 1) var(--bezier);transition:all calc(var(--timing)/ 1) var(--bezier)}header .social-link::after{height:0}header .menu-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media(min-width:768px){header .menu-item{display:none}}header .nav-left{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:100%;-webkit-box-flex:0;-ms-flex:0;flex:0;min-height:2em}@media(min-width:768px){header .nav-left{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-flex:1;-ms-flex:1;flex:1;width:auto}}header .nav-center{display:none;width:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;grid-gap:30px;gap:30px;-webkit-box-flex:1;-ms-flex:1;flex:1}@media(min-width:768px){header .nav-center{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1}}header .nav-center ul{grid-gap:30px;gap:30px}@media(min-width:768px){header .nav-center ul{grid-gap:0;gap:0}}header .nav-right{display:none;width:100%;-webkit-box-flex:0;-ms-flex:0;flex:0;margin-left:auto;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media(min-width:768px){header .nav-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-flex:1;-ms-flex:1;flex:1}}header .nav-items{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;font-size:3em}@media(min-width:768px){header .nav-items{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;font-size:1em}}header .contact-links{font-size:2em;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;grid-gap:30px;gap:30px}@media(min-width:768px){header .contact-links{font-size:1em;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;grid-gap:0;gap:0}}header .desktop-nav{display:none}@media(min-width:768px){header .desktop-nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}header .mobile-nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media(min-width:768px){header .mobile-nav{display:none}}.gg-close,.gg-menu-right{color:var(--primary-pink)}.gg-close{--ggs:1.3}.badge-pill{background-color:rgba(255,255,255,.5);padding:1em .8em;color:#fff;line-height:0;font-weight:400;font-size:.75em}.btn{font-size:1em;padding:1em 1em;min-width:8em;-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:.5s;transition:.5s}@media(min-width:768px){.btn{font-size:.8em;padding:.75em 1em}}.btn:hover{-webkit-transform:translateY(-.25em);transform:translateY(-.25em);-webkit-transition:all calc(var(--timing)/ 2) var(--bezier);transition:all calc(var(--timing)/ 2) var(--bezier);-webkit-box-shadow:0 8px 20px 0 rgba(0,0,0,.2);box-shadow:0 8px 20px 0 rgba(0,0,0,.2)}@media (max-width:767.98px){.btn{width:100%}}.btn-primary{background:var(--primary-gradient);border:1px solid transparent}.btn-primary:active,.btn-primary:focus,.btn-primary:hover{background:var(--primary-gradient);-webkit-text-fill-color:var(--primary-gradient);border:1px solid transparent}.btn-secondary{color:#fff;border:solid 1px #fff;background:0 0;-webkit-text-fill-color:#fff;background-color:transparent}.btn-secondary:active,.btn-secondary:focus,.btn-secondary:hover{color:#fff;border:solid 1px #fff;background:0 0;-webkit-text-fill-color:#fff;background-color:transparent}.btn-tertiary{color:var(--primary-text-color);border:solid 1px #fff;background-color:transparent;border:1px solid var(--primary-text-color)}.rounded{border-radius:0!important}a.card-link{text-decoration:none;border:none;color:transparent;background-color:transparent}a.card-link:active,a.card-link:focus,a.card-link:hover{text-decoration:none;border:none}.card-columns{-moz-column-gap:1rem;grid-column-gap:1rem;-webkit-column-gap:1rem;column-gap:1rem;-moz-column-count:1;-webkit-column-count:1;column-count:1}@media (min-width:768px){.card-columns{-moz-column-gap:2rem;grid-column-gap:2rem;-webkit-column-gap:2rem;column-gap:2rem;-moz-column-count:2;-webkit-column-count:2;column-count:2}}.card{position:relative;width:100%}.card .card-img-top-center{margin:auto}.card .card-img-top{display:block;height:auto;max-width:50%}.process-card{position:relative;-webkit-transition:.1s ease-out;transition:.1s ease-out;cursor:default}.process-card:hover{-webkit-transform:translatey(-.5rem);transform:translatey(-.5rem);-webkit-box-shadow:rgba(100,100,111,.2) 0 7px 29px 0;box-shadow:rgba(100,100,111,.2) 0 7px 29px 0}.card-shadow{-webkit-transform:translateY(0);transform:translateY(0);z-index:0}.portfolio-card{position:relative;overflow:hidden;border-radius:0;-webkit-mask-image:-webkit-radial-gradient(white,#000)}.portfolio-card h6{color:rgba(255,255,255,.5);background:rgba(255,255,255,.5);-webkit-background-clip:text}.portfolio-card img{max-width:100%;-webkit-transition:all .3s;transition:all .3s;display:block;width:100%;height:auto;-webkit-transform:scale(1);transform:scale(1);border-radius:0}.portfolio-card:focus img,.portfolio-card:hover img{-webkit-transform:scale(1.05);transform:scale(1.05);border-radius:0}.coming-soon{opacity:.3}.coming-soon img{-webkit-filter:grayscale(100%);filter:grayscale(100%)}.coming-soon:focus img,.coming-soon:hover img{-webkit-transform:scale(1);transform:scale(1);border-radius:0}@media (min-width:768px){.testimonial-text{text-align:left}}.testimonial-text h4{color:#fff}.testimonial-text h6{color:rgba(255,255,255,.5)}.testimonial-img{height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile);margin:auto;-webkit-transform:scale(1);transform:scale(1);-webkit-transition:all 3s ease-out;transition:all 3s ease-out}@media (min-width:768px){.testimonial-img{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}.testimonial-img:hover::before{-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;cursor:pointer}.testimonial-img::before{content:'';position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;text-align:center;height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile);background:var(--primary-gradient);background-size:100% 100%;-webkit-transform:translateY(5%);transform:translateY(5%);border-radius:50%;-webkit-box-shadow:2px;box-shadow:2px;-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;cursor:pointer}@media (min-width:768px){.testimonial-img::before{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img::before{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}.testimonial-img::after{content:'';position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;text-align:center;background-image:url(/img/homepage/testimonial/Gemma.webp);background-size:cover;background-repeat:no-repeat;border-radius:50%;height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile)}.scale-up{-webkit-transform:scale(1.25);transform:scale(1.25);-webkit-transition:all 3s ease-out;transition:all 3s ease-out}@media (min-width:768px){.testimonial-img::after{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img::after{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}.testimonial-img-jack{height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile);margin:auto}@media (min-width:768px){.testimonial-img-jack{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img-jack{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}.testimonial-img-jack:hover::before{-webkit-transform:translateY(0);transform:translateY(0);-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;cursor:pointer}.testimonial-img-jack::before{content:'';position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;text-align:center;height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile);background:var(--primary-gradient);background-size:100% 100%;-webkit-transform:translateY(5%);transform:translateY(5%);border-radius:50%;-webkit-box-shadow:2px;box-shadow:2px;-webkit-transition:-webkit-transform .2s;transition:-webkit-transform .2s;transition:transform .2s;transition:transform .2s,-webkit-transform .2s;cursor:pointer}@media (min-width:768px){.testimonial-img-jack::before{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img-jack::before{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}.testimonial-img-jack::after{content:'';position:absolute;margin-left:auto;margin-right:auto;left:0;right:0;text-align:center;background-image:url(/img/homepage/testimonial/Jack.webp);background-size:cover;background-repeat:no-repeat;border-radius:50%;height:var(--testimonial-img-size-mobile);width:var(--testimonial-img-size-mobile)}@media (min-width:768px){.testimonial-img-jack::after{height:var(--testimonial-img-size-md);width:var(--testimonial-img-size-md)}}@media (min-width:992px){.testimonial-img-jack::after{height:--testimonial-img-size-lg;width:--testimonial-img-size-lg}}section{position:relative;min-height:25vh;margin:2rem 0}@media (min-width:768px){section{margin:6rem 0}}@media (min-width:992px){section{margin:8rem 0}}.background-image{background-image:url(/images/homepage/homepage-bg-new.svg);background-position:bottom;background-repeat:no-repeat;background-size:cover;height:100vh;width:100vw;position:absolute;bottom:0;z-index:-1}.background-image-testimonial{background-image:url(/images/homepage/homepage-bg-new.svg);background-position:center;background-repeat:no-repeat;background-size:cover;height:auto;position:relative;min-height:40vh}.hero-single{height:75vh;width:100%;margin-top:72px}.hero{height:100vh;width:100%;color:#fff;z-index:0}.hero h1{font-size:3em;line-height:100%;color:#fff;background:-webkit-linear-gradient(#fff,#fff);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent}@media (min-width:768px){.hero h1{font-size:3.5em}}.hero h1 span{color:var(--primary-pink);background:var(--primary-gradient);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;text-fill-color:transparent}.hero h6{color:#fff;background:-webkit-linear-gradient(#fff,#fff);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent}.down-arrow{position:absolute;bottom:0;left:50%;width:240px;-webkit-transform:translateX(-120px);transform:translateX(-120px);font-size:.6em;margin:0}.down-arrow .down-arrow_animated{-webkit-animation-name:downIconBounce;animation-name:downIconBounce;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-transform:translateX(0);transform:translateX(0);-webkit-animation-direction:alternate;animation-direction:alternate;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes downIconBounce{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{-webkit-transform:translateY(10px);transform:translateY(10px)}}@keyframes downIconBounce{0%{-webkit-transform:translateY(0);transform:translateY(0)}100%{-webkit-transform:translateY(10px);transform:translateY(10px)}}.down-arrow .gg-chevron-down{color:var(--primary-pink)}.down-arrow_hero{bottom:5%}.down-arrow_text{text-align:center;margin-top:1rem;margin-bottom:1rem}h4.job-title span{color:var(--primary-gradient);opacity:.5}#mycarespace{margin:0 0 2rem 0}#challenge,#interview-objectives,#key-insights,#overview,#project-goals,#understanding-the-problem{margin-top:3rem;margin-bottom:1rem}blockquote{position:relative;background-color:transparent;padding:1.2rem 1.3rem 1.2rem 1.5rem;margin:2rem 0 3rem 0;border:1px solid var(--primary-text-color);border-radius:0}blockquote p{margin:0 0 .5rem 0}blockquote p strong{font-family:PX-Grotesk,Arial,Helvetica,sans-serif;text-transform:uppercase;letter-spacing:1px;font-size:.75em;font-weight:400;margin-top:.75rem;margin-bottom:.25rem;background:var(--primary-gradient);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent}blockquote a{background:var(--primary-gradient);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;border-bottom:transparent;padding-bottom:.25rem}blockquote a:active,blockquote a:focus,blockquote a:hover{background:var(--primary-gradient);background-clip:text;-webkit-background-clip:text;-webkit-text-fill-color:transparent;text-decoration:none;border-bottom:1px solid var(--primary-pink)}@media (min-width:768px){blockquote{padding:1.4rem 1.5rem 1.4rem 2rem}}figure figcaption,figure figcaption h4{color:var(--primary-text-color);font-weight:400;font-size:.8em;margin-top:1rem;margin-bottom:1rem;text-align:center}.swiper{width:100%;height:auto}.swiper:hover{cursor:url(/images/icons/mouse-scroll.svg),auto;cursor:ew-resize}.swiper .swiper-pagination-bullet-active{background-color:var(--primary-pink)}.fade-enter-active,.fade-leave-active{-webkit-transition:opacity var(--timing) var(--bezier),-webkit-transform var(--timing) var(--bezier);transition:opacity var(--timing) var(--bezier),-webkit-transform var(--timing) var(--bezier);transition:opacity var(--timing) var(--bezier),transform var(--timing) var(--bezier);transition:opacity var(--timing) var(--bezier),transform var(--timing) var(--bezier),-webkit-transform var(--timing) var(--bezier)}.fade-leave{opacity:1;-webkit-transform:translate(0,0);transform:translate(0,0)}.fade-leave-to{opacity:0;-webkit-transform:translate(0,30px);transform:translate(0,30px)}.fade-enter{opacity:0;-webkit-transform:translate(0,30px);transform:translate(0,30px)}.fade-enter-to{opacity:1;-webkit-transform:translate(0,0);transform:translate(0,0)}header .bgWhite{background-color:var(--text-white);background:var(--text-white);-webkit-transition:all var(--timing) var(--bezier);transition:all var(--timing) var(--bezier)}header .bgDark{background-color:var(--primary-text-color);background:var(--primary-text-color);-webkit-transition:all var(--timing) var(--bezier);transition:all var(--timing) var(--bezier)}header .textDark{color:var(--primary-text-color);background:var(--primary-text-color);-webkit-background-clip:text;background-clip:text;-webkit-transition:all var(--timing) var(--bezier);transition:all var(--timing) var(--bezier)}header .textLight{color:var(--text-white);background:var(--text-white);-webkit-background-clip:text;background-clip:text;-webkit-transition:all var(--timing) var(--bezier);transition:all var(--timing) var(--bezier)}.fade-up{opacity:0;-webkit-transform:translate(0,+3em);transform:translate(0,+3em)}.in-view{opacity:1;-webkit-transform:translate(0,0);transform:translate(0,0);-webkit-transition:all calc(var(--timing)*2) var(--bezier);transition:all calc(var(--timing)*2) var(--bezier)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
